docker.host=dockerhub.com
docker.image.version=1.0.0
docker.repo=twins
docker.work.dir=/opt/twins

# GPG signing configuration used by Gradle's signing plugin and/or publishing tasks.
# How to generate and fill these values:
# 1) Install GPG
#    - macOS (Homebrew):  brew install gnupg
#    - Ubuntu/Debian:     sudo apt-get update && sudo apt-get install -y gnupg
#    - Fedora:             sudo dnf install gnupg
# 2) Create a key pair (choose RSA 4096, set Name/Email, and set a passphrase when asked):
#       gpg --full-generate-key
# 3) List keys and copy your key ID (the LONG form after rsa4096/ on the 'sec' line) or use your key email:
#       gpg --list-secret-keys --keyid-format=long
#    Example output: sec   rsa4096/ABCD1234EF567890 2025-09-16 [SC]
#                    uid                   Your Name <you@example.com>
#    You can set signing.gnupg.keyName to either the email (you@example.com) or the long key ID (ABCD1234EF567890).
# 4) Set signing.gnupg.passphrase to the passphrase you set for the GPG key (do NOT commit real secrets to VCS).
# 5) Set signing.gnupg.executable to your gpg binary path. Common paths:
#    - macOS (Homebrew on Apple Silicon): /opt/homebrew/bin/gpg
#    - macOS (Intel/Homebrew):            /usr/local/bin/gpg
#    - Most Linux distros:                /usr/bin/gpg
# 6) Test that Gradle sees your key by running a signing task that uses it (e.g., publish/sign tasks),
#    or by checking that `gpg --list-secret-keys` shows the key you intend to use.
# Optional (for Central/Sonatype): export your public key so others can verify signatures:
#       gpg --keyserver keyserver.ubuntu.com --send-keys ABCD1234EF567890
#       gpg --armor --export ABCD1234EF567890 > public-key.asc



signing.gnupg.executable=/usr/bin/gpg
signing.gnupg.keyName=
signing.gnupg.passphrase=

centralPortal.username=
centralPortal.password=

