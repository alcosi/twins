root = true # Specifies that this is the root EditorConfig file. If true,
# EditorConfig will stop looking for additional config files in parent directories.

[*]
charset = utf-8 # Sets the character encoding for files to UTF-8.
end_of_line = crlf # Uses 'LF' (Line Feed, Unix-style) as the line-ending character.
indent_size = 4 # Configures the number of spaces used for each indentation level.
indent_style = space # Specifies that spaces (and not tabs) should be used for indentation.
insert_final_newline = true # Ensures a final newline is added at the end of files if absent.
max_line_length = 120 # Sets the maximum allowed line length for readability.
tab_width = 4 # Defines the width of a tab character (used for displaying/tab-aligned files).
ij_continuation_indent_size = 8 # Sets the size for continuation indents (e.g., for wrapped lines in IntelliJ IDEA).
ij_formatter_off_tag = @formatter:off # Defines the tag that disables IntelliJ IDEA's automatic code formatter.
ij_formatter_on_tag = @formatter:on # Defines the tag that restores IntelliJ IDEA's automatic code formatter.
ij_formatter_tags_enabled = false # Disables using formatter tags (@formatter:off/@formatter:on) in IntelliJ IDEA.
ij_smart_tabs = false # Disables the use of "smart tabs", where tabs are mixed with spaces for alignment.
ij_visual_guides = none # Removes any visual guides (e.g., rulers) for code alignment in IntelliJ IDEA.
ij_wrap_on_typing = false # Disables IntelliJ IDEA's feature to automatically wrap text during typing.

[*.java]
ij_java_align_consecutive_assignments = false # Disables alignment of consecutive assignment operations.
ij_java_align_consecutive_variable_declarations = false # Disables alignment of consecutive variable declarations.
ij_java_align_group_field_declarations = false # Disables alignment of grouped field declarations.
ij_java_align_multiline_annotation_parameters = false # Disables alignment of multiline annotation parameters.
ij_java_align_multiline_array_initializer_expression = false # Disables alignment of elements in multiline array initializations.
ij_java_align_multiline_assignment = false # Disables alignment of multiline assignments.
ij_java_align_multiline_binary_operation = false # Disables alignment of multiline binary operations.
ij_java_align_multiline_chained_methods = false # Disables alignment of multiline chained method calls.
ij_java_align_multiline_extends_list = false # Disables alignment of multiline `extends` lists.
ij_java_align_multiline_for = true # Enables alignment of multiline `for` loops.
ij_java_align_multiline_method_parentheses = false # Disables alignment of method parentheses in multiline calls.
ij_java_align_multiline_parameters = true # Enables alignment of parameters in multiline method declarations.
ij_java_align_multiline_parameters_in_calls = false # Disables alignment of parameters in multiline method calls.
ij_java_align_multiline_parenthesized_expression = false # Disables alignment of multiline parenthesized expressions.
ij_java_align_multiline_records = true # Enables alignment of multiline `record` components.
ij_java_align_multiline_resources = true # Enables alignment of resources in multiline `try-with-resources` statements.
ij_java_align_multiline_ternary_operation = false # Disables alignment of multiline ternary operations.
ij_java_align_multiline_text_blocks = false # Disables alignment of multiline text blocks.
ij_java_align_multiline_throws_list = false # Disables alignment of multiline `throws` lists.
ij_java_align_subsequent_simple_methods = false # Disables alignment of subsequent simple methods.
ij_java_align_throws_keyword = false # Disables alignment of the `throws` keyword.
ij_java_annotation_parameter_wrap = off # Turns off wrapping for annotation parameters.
ij_java_array_initializer_new_line_after_left_brace = false # Prevents line breaks after the opening brace in array initializations.
ij_java_array_initializer_right_brace_on_new_line = false # Prevents the closing brace of array initializations on a new line.
ij_java_array_initializer_wrap = off # Disables wrapping for array initializations.
ij_java_assert_statement_colon_on_next_line = false # Prevents `assert` statement colons from being placed on the next line.
ij_java_assert_statement_wrap = off # Disables wrapping for `assert` statements.
ij_java_assignment_wrap = off # Disables wrapping for assignments.
ij_java_binary_operation_sign_on_next_line = false # Prevents binary operation signs from being placed on the next line.
ij_java_binary_operation_wrap = off # Disables wrapping for binary operations.
ij_java_blank_lines_after_anonymous_class_header = 0 # Sets the number of blank lines after an anonymous class header to 0.
ij_java_blank_lines_after_class_header = 0 # Sets the number of blank lines after a class header to 0.
ij_java_blank_lines_after_imports = 1 # Adds one blank line after imports.
ij_java_blank_lines_after_package = 1 # Adds one blank line after the package declaration.
ij_java_blank_lines_around_class = 1 # Adds one blank line around class definitions.
ij_java_blank_lines_around_field = 0 # No blank lines around fields.
ij_java_blank_lines_around_field_in_interface = 0 # No blank lines around fields in interfaces.
ij_java_blank_lines_around_initializer = 1 # Adds one blank line around initializers.
ij_java_blank_lines_around_method = 1 # Adds one blank line around method definitions.
ij_java_blank_lines_around_method_in_interface = 1 # Adds one blank line around methods in interfaces.
ij_java_blank_lines_before_class_end = 0 # No blank lines before the end of a class definition.
ij_java_blank_lines_before_imports = 1 # Adds one blank line before imports.
ij_java_blank_lines_before_method_body = 0 # No blank lines before the method body.
ij_java_blank_lines_before_package = 0 # No blank lines before the package declaration.
ij_java_block_brace_style = end_of_line # Keeps opening braces at the end of the current line.
ij_java_block_comment_at_first_column = true # Places block comments starting at column 1.
ij_java_builder_methods = none # Builder methods do not wrap.
ij_java_call_parameters_new_line_after_left_paren = false # Keeps method call parameters on the same line as the opening parenthesis.
ij_java_call_parameters_right_paren_on_new_line = false # Keeps closing parentheses of method calls on the same line as parameters.
ij_java_call_parameters_wrap = off # Disables wrapping for method call parameters.
ij_java_case_statement_on_separate_line = true # Places `case` statements on a separate line.
ij_java_catch_on_new_line = false # Keeps `catch` on the same line as the closing brace of the `try` block.
ij_java_class_annotation_wrap = split_into_lines # Splits class annotations into multiple lines when necessary.
ij_java_class_brace_style = end_of_line # Places the opening brace of a class definition on the same line as the class header.
ij_java_class_count_to_use_import_on_demand = 100 # Use "import *" when there are more than 100 classes in the same package to be imported.
ij_java_class_names_in_javadoc = 1 # Fully qualifies class names in Javadoc.
ij_java_do_not_indent_top_level_class_members = false # Indents top-level members of a class.
ij_java_do_not_wrap_after_single_annotation = false # Allows wrapping even after a single annotation.
ij_java_do_while_brace_force = never # Does not force braces for `do-while` loops.
ij_java_doc_add_blank_line_after_description = true # Adds a blank line after the description in Javadoc comments.
ij_java_doc_add_blank_line_after_param_comments = false # Does not add a blank line after `@param` comments.
ij_java_doc_add_blank_line_after_return = false # Does not add a blank line after `@return` comments.
ij_java_doc_add_p_tag_on_empty_lines = true # Adds `<p>` tags on empty lines in Javadoc comments.
ij_java_doc_align_exception_comments = true # Aligns comments for `@throws` in Javadoc.
ij_java_doc_align_param_comments = true # Aligns comments for `@param` in Javadoc.
ij_java_doc_do_not_wrap_if_one_line = false # Wraps single-line Javadoc comments when necessary.
ij_java_doc_enable_formatting = true # Enables formatting for Javadoc comments.
ij_java_doc_enable_leading_asterisks = true # Uses leading asterisks (`*`) in Javadoc comments.
ij_java_doc_indent_on_continuation = false # Does not indent continuation lines in Javadoc.
ij_java_doc_keep_empty_lines = true # Preserves empty lines in Javadoc comments.
ij_java_doc_keep_empty_parameter_tag = true # Keeps empty `@param` tags in Javadoc comments.
ij_java_doc_keep_empty_return_tag = true # Keeps empty `@return` tags in Javadoc comments.
ij_java_doc_keep_empty_throws_tag = true # Keeps empty `@throws` tags in Javadoc comments.
ij_java_doc_keep_invalid_tags = true # Keeps invalid Javadoc tags without modification.
ij_java_doc_param_description_on_new_line = false # Does not move the parameter description to a new line in Javadoc.
ij_java_doc_preserve_line_breaks = false # Does not preserve original line breaks in Javadoc.
ij_java_doc_use_throws_not_exception_tag = true # Uses `@throws` instead of `@exception` in Javadoc.
ij_java_else_on_new_line = false # Keeps `else` on the same line as the closing brace of the previous `if` block.
ij_java_entity_dd_suffix = EJB # Sets "EJB" as the suffix for entity deployment descriptors.
ij_java_entity_eb_suffix = Bean # Sets "Bean" as the suffix for entity beans.
ij_java_entity_hi_suffix = Home # Sets "Home" as the suffix for home interfaces.
ij_java_entity_lhi_prefix = Local # Sets "Local" as the prefix for local home interfaces.
ij_java_entity_lhi_suffix = Home # Sets "Home" as the suffix for local home interfaces.
ij_java_entity_li_prefix = Local # Sets "Local" as the prefix for local interfaces.
ij_java_entity_pk_class = java.lang.String # Specifies `java.lang.String` as the primary key class for entities.
ij_java_entity_vo_suffix = VO # Sets "VO" as the suffix for value objects.
ij_java_enum_constants_wrap = off # Disables wrapping for enum constants.
ij_java_extends_keyword_wrap = off # Disables wrapping for the `extends` keyword.
ij_java_extends_list_wrap = off # Disables wrapping for `extends` lists.
ij_java_field_annotation_wrap = split_into_lines # Splits field annotations into multiple lines when necessary.
ij_java_finally_on_new_line = false # Keeps the `finally` block on the same line as the preceding closing brace.
ij_java_for_brace_force = never # Does not force braces for `for` loops.
ij_java_for_statement_new_line_after_left_paren = false # Keeps `for` statement content on the same line as the opening parenthesis.
ij_java_for_statement_right_paren_on_new_line = false # Keeps the closing parenthesis of a `for` statement on the same line.
ij_java_for_statement_wrap = off # Disables wrapping for `for` statements.
ij_java_generate_final_locals = false # Does not automatically add the `final` modifier to local variables.
ij_java_generate_final_parameters = false # Does not automatically add the `final` modifier to method parameters.
ij_java_if_brace_force = never # Does not force braces for `if` statements.
ij_java_imports_layout = *, |, org.cambium.**, org.twins.**, |, java.**, javax.**, |, $* # Configures the order of import statements
ij_java_indent_case_from_switch = true # Indents `case` sections inside a `switch` block.
ij_java_insert_inner_class_imports = false # Does not insert imports for inner classes.
ij_java_insert_override_annotation = true # Automatically inserts `@Override` annotations for overridden methods.
ij_java_keep_blank_lines_before_right_brace = 2 # Keeps 2 blank lines before closing braces.
ij_java_keep_blank_lines_between_package_declaration_and_header = 2 # Keeps 2 blank lines between the package declaration and file header.
ij_java_keep_blank_lines_in_code = 2 # Keeps 2 blank lines within code sections.
ij_java_keep_blank_lines_in_declarations = 2 # Keeps 2 blank lines in declarations (e.g., fields or method groups).
ij_java_keep_builder_methods_indents = false # Does not keep indents inside builder-style methods.
ij_java_keep_control_statement_in_one_line = true # Keeps simple control statements (like `if`, `for`) on one line if possible.
ij_java_keep_first_column_comment = false # Does not enforce comments to start in the first column.
ij_java_keep_indents_on_empty_lines = false # Does not keep indents on empty lines.
ij_java_keep_line_breaks = true # Retains original line breaks in code.
ij_java_keep_multiple_expressions_in_one_line = false # Does not allow multiple expressions on one line.
ij_java_keep_simple_blocks_in_one_line = false # Does not allow simple blocks (e.g., `{ return; }`) to remain on one line.
ij_java_keep_simple_classes_in_one_line = false # Does not allow simple classes (e.g., `class {}`) to remain on one line.
ij_java_keep_simple_lambdas_in_one_line = false # Does not allow simple lambdas (e.g., `x -> {}`) to remain on one line.
ij_java_keep_simple_methods_in_one_line = false # Does not allow simple methods (e.g., `void method() {}`) to remain on one line.
ij_java_label_indent_absolute = false # Labels are indented relatively to the containing block.
ij_java_label_indent_size = 0 # Uses no additional indentation for labels.
ij_java_lambda_brace_style = end_of_line # Keeps opening braces for lambdas on the same line.
ij_java_layout_static_imports_separately = true # Separates static imports into their own group during import sorting.
ij_java_line_comment_add_space = false # Does not automatically add a space after line comment markers (`//`).
ij_java_line_comment_at_first_column = true # Places line comments at the first column.
ij_java_message_dd_suffix = EJB # Sets "EJB" as the suffix for message-driven deployment descriptors.
ij_java_message_eb_suffix = Bean # Sets "Bean" as the suffix for message-driven beans.
ij_java_method_annotation_wrap = split_into_lines # Splits method annotations into multiple lines when necessary.
ij_java_method_brace_style = end_of_line # Keeps opening braces for methods on the same line as the method declaration.
ij_java_method_call_chain_wrap = off # Disables wrapping for chained method calls.
ij_java_method_parameters_new_line_after_left_paren = false # Keeps method parameters on the same line as the opening parenthesis.
ij_java_method_parameters_right_paren_on_new_line = false # Keeps the closing parenthesis of method parameters on the same line as the parameters.
ij_java_method_parameters_wrap = off # Disables wrapping of method parameters.
ij_java_modifier_list_wrap = false # Does not wrap the list of method or class modifiers.
ij_java_names_count_to_use_import_on_demand = 100 # Uses "import *" for packages with more than 100 classes to import.
ij_java_new_line_after_lparen_in_record_header = false # Keeps record header content on the same line as the opening parenthesis.
ij_java_packages_to_use_import_on_demand = javax.swing.* # Specifies packages for which "import *" is automatically used.
ij_java_parameter_annotation_wrap = off # Disables wrapping for parameter annotations.
ij_java_parentheses_expression_new_line_after_left_paren = false # Keeps parentheses-enclosed expressions on the same line after the opening parenthesis.
ij_java_parentheses_expression_right_paren_on_new_line = false # Keeps the closing parenthesis of parentheses-enclosed expressions on the same line.
ij_java_place_assignment_sign_on_next_line = false # Does not move the assignment operator (`=`) to the next line.
ij_java_prefer_longer_names = true # Avoids shortening names in the code for clarity.
ij_java_prefer_parameters_wrap = false # Prefers not to wrap methods' parameter lists.
ij_java_record_components_wrap = normal # Wraps record components normally without specific restrictions.
ij_java_repeat_synchronized = true # Repeats the `synchronized` keyword even if not strictly required.
ij_java_replace_instanceof_and_cast = false # Does not automatically replace `instanceof` and cast operations with patterns.
ij_java_replace_null_check = true # Replaces `null` checks with `Objects.requireNonNull` when applicable.
ij_java_replace_sum_lambda_with_method_ref = true # Replaces lambda expressions with equivalent method references when possible.
ij_java_resource_list_new_line_after_left_paren = false # Keeps resource lists on the same line as the opening parenthesis in `try` statements.
ij_java_resource_list_right_paren_on_new_line = false # Keeps the closing parenthesis of a resource list on the same line.
ij_java_resource_list_wrap = off # Disables wrapping for resource lists in `try` statements.
ij_java_rparen_on_new_line_in_record_header = false # Keeps the closing parenthesis of a record header on the same line.
ij_java_session_dd_suffix = EJB # Sets "EJB" as the suffix for session-driven deployment descriptors.
ij_java_session_eb_suffix = Bean # Sets "Bean" as the suffix for session-driven beans.
ij_java_session_hi_suffix = Home # Sets "Home" as the suffix for home interfaces of session beans.
ij_java_session_lhi_prefix = Local # Sets "Local" as the prefix for local home interfaces of session beans.
ij_java_session_lhi_suffix = Home # Sets "Home" as the suffix for local home interfaces of session beans.
ij_java_session_li_prefix = Local # Sets "Local" as the prefix for local interfaces of session beans.
ij_java_session_si_suffix = Service # Sets "Service" as the suffix for service interface implementations.
ij_java_space_after_closing_angle_bracket_in_type_argument = false # Does not insert space after a closing angle bracket (`>`).
ij_java_space_after_colon = true # Inserts a space after colons in code.
ij_java_space_after_comma = true # Inserts a space after commas in lists.
ij_java_space_after_comma_in_type_arguments = true # Inserts a space after commas in type argument lists.
ij_java_space_after_for_semicolon = true # Inserts a space after semicolons in `for` statements.
ij_java_space_after_quest = true # Inserts a space after a question mark (`?`) in ternary operations.
ij_java_space_after_type_cast = true # Inserts a space after type cast expressions.
ij_java_space_before_annotation_array_initializer_left_brace = false # Does not insert a space before the opening brace of an annotation array initializer.
ij_java_space_before_annotation_parameter_list = false # Does not insert a space before an annotation's parameter list.
ij_java_space_before_array_initializer_left_brace = false # Does not insert a space before the opening brace of an array initializer.
ij_java_space_before_catch_keyword = true # Inserts a space before the `catch` keyword.
ij_java_space_before_catch_left_brace = true # Inserts a space before the opening brace of a `catch` block.
ij_java_space_before_catch_parentheses = true # Inserts a space before the parentheses of a `catch` block.
ij_java_space_before_class_left_brace = true # Inserts a space before the opening brace of a class declaration.
ij_java_space_before_colon = true # Inserts a space before colons.
ij_java_space_before_colon_in_foreach = true # Inserts a space before colons in `foreach` statements.
ij_java_space_before_comma = false # Does not insert space before commas.
ij_java_space_before_do_left_brace = true # Inserts a space before the opening brace of a `do` block.
ij_java_space_before_else_keyword = true # Inserts a space before the `else` keyword.
ij_java_space_before_else_left_brace = true # Inserts a space before the opening brace of an `else` block.
ij_java_space_before_finally_keyword = true # Inserts a space before the `finally` keyword.
ij_java_space_before_finally_left_brace = true # Inserts a space before the opening brace of a `finally` block.
ij_java_space_before_for_left_brace = true # Inserts a space before the opening brace of a `for` block.
ij_java_space_before_for_parentheses = true # Inserts a space before the opening parenthesis of a `for` statement.
ij_java_space_before_for_semicolon = false # Does not insert a space before semicolons in `for` statements.
ij_java_space_before_if_left_brace = true # Inserts a space before the opening brace of an `if` block.
ij_java_space_before_if_parentheses = true # Inserts a space before the opening parenthesis of an `if` statement.
ij_java_space_before_method_call_parentheses = false # Does not insert a space before method call parentheses.
ij_java_space_before_method_left_brace = true # Inserts a space before the opening brace of a method block.
ij_java_space_before_method_parentheses = false # Does not insert a space before method parameter parentheses.
ij_java_space_before_opening_angle_bracket_in_type_parameter = false # Does not insert a space before opening angle brackets in type parameters.
ij_java_space_before_quest = true # Inserts a space before the question mark (`?`) in ternary operations.
ij_java_space_before_switch_left_brace = true # Inserts a space before the opening brace of a `switch` block.
ij_java_space_before_switch_parentheses = true # Inserts a space before the opening parenthesis of a `switch` statement.
ij_java_space_before_synchronized_left_brace = true # Inserts a space before the opening brace of a `synchronized` block.
ij_java_space_before_synchronized_parentheses = true # Inserts a space before the opening parenthesis of a `synchronized` statement.
ij_java_space_before_try_left_brace = true # Inserts a space before the opening brace of a `try` block.
ij_java_space_before_try_parentheses = true # Inserts a space before the opening parenthesis of a `try` statement.
ij_java_space_before_type_parameter_list = false # Does not insert a space before the type parameter list.
ij_java_space_before_while_keyword = true # Inserts a space before the `while` keyword.
ij_java_space_before_while_left_brace = true # Inserts a space before the opening brace of a `while` block.
ij_java_space_before_while_parentheses = true # Inserts a space before the opening parenthesis of a `while` statement.
ij_java_space_inside_one_line_enum_braces = false # Does not insert spaces inside one-line enum braces.
ij_java_space_within_empty_array_initializer_braces = false # Does not insert spaces within empty array initializer braces.
ij_java_space_within_empty_method_call_parentheses = false # Does not insert spaces within empty method call parentheses.
ij_java_space_within_empty_method_parentheses = false # Does not insert spaces within empty method parentheses.
ij_java_spaces_around_additive_operators = true # Inserts spaces around additive operators (`+`, `-`).
ij_java_spaces_around_assignment_operators = true # Inserts spaces around assignment operators (`=`).
ij_java_spaces_around_bitwise_operators = true # Inserts spaces around bitwise operators (`&`, `|`, `^`).
ij_java_spaces_around_equality_operators = true # Inserts spaces around equality operators (`==`, `!=`).
ij_java_spaces_around_lambda_arrow = true # Inserts spaces around the lambda arrow (`->`).
ij_java_spaces_around_logical_operators = true # Inserts spaces around logical operators (`&&`, `||`).
ij_java_spaces_around_method_ref_dbl_colon = false # Does not insert spaces around the method reference operator (`::`).
ij_java_spaces_around_multiplicative_operators = true # Inserts spaces around multiplicative operators (`*`, `/`, `%`).
ij_java_spaces_around_relational_operators = true # Inserts spaces around relational operators (`<`, `>`, `<=`, `>=`).
ij_java_spaces_around_shift_operators = true # Inserts spaces around shift operators (`<<`, `>>`, `>>>`).
ij_java_spaces_around_type_bounds_in_type_parameters = true # Inserts spaces around type bounds in type parameters.
ij_java_spaces_around_unary_operator = false # Does not insert space around unary operators (`!`, `~`, `-`).
ij_java_spaces_within_angle_brackets = false # Does not insert spaces within angle brackets (`<`, `>`).
ij_java_spaces_within_annotation_parentheses = false # Does not insert spaces within annotation parentheses.
ij_java_spaces_within_array_initializer_braces = false # Does not insert spaces within array initializer braces.
ij_java_spaces_within_braces = false # Does not insert spaces within braces.
ij_java_spaces_within_brackets = false # Does not insert spaces within brackets (`[]`).
ij_java_spaces_within_cast_parentheses = false # Does not insert spaces within cast parentheses.
ij_java_spaces_within_catch_parentheses = false # Does not insert spaces within the parentheses of a `catch` block.
ij_java_spaces_within_for_parentheses = false # Does not insert spaces within the parentheses of a `for` statement.
ij_java_spaces_within_if_parentheses = false # Does not insert spaces within the parentheses of an `if` statement.
ij_java_spaces_within_method_call_parentheses = false # Does not insert spaces within method call parentheses.
ij_java_spaces_within_method_parentheses = false # Does not insert spaces within method parameter parentheses.
ij_java_spaces_within_parentheses = false # Does not insert spaces within general parentheses.
ij_java_spaces_within_record_header = false # Does not insert spaces within record headers.
ij_java_spaces_within_switch_parentheses = false # Does not insert spaces within the parentheses of a `switch` statement.
ij_java_spaces_within_synchronized_parentheses = false # Does not insert spaces within the parentheses of a `synchronized` block.
ij_java_spaces_within_try_parentheses = false # Does not insert spaces within the parentheses of a `try` statement.
ij_java_spaces_within_while_parentheses = false # Does not insert spaces within the parentheses of a `while` statement.
ij_java_special_else_if_treatment = true # Treats `else if` as a special construct.
ij_java_subclass_name_suffix = Impl # Sets "Impl" as the suffix for subclass implementations.
ij_java_ternary_operation_signs_on_next_line = false # Does not move ternary operators (`?`, `:`) to the next line.
ij_java_ternary_operation_wrap = off # Disables wrapping for ternary operations.
ij_java_test_name_suffix = Test # Sets "Test" as the suffix for test classes.
ij_java_throws_keyword_wrap = off # Disables wrapping for the `throws` keyword.
ij_java_throws_list_wrap = off # Disables wrapping for exception lists in `throws`.
ij_java_use_external_annotations = false # Does not use external annotations.
ij_java_use_fq_class_names = false # Does not use fully qualified class names in code.
ij_java_use_relative_indents = false # Does not use relative indents in code formatting.
ij_java_use_single_class_imports = true # Forces single-class imports instead of wildcard imports.
ij_java_variable_annotation_wrap = off # Disables wrapping for variable annotations.
ij_java_visibility = public # Sets default visibility to `public`.
ij_java_while_brace_force = never # Does not enforce braces for `while` loops.
ij_java_while_on_new_line = false # Keeps `while` on the same line as the closing brace of a `do` block.
ij_java_wrap_comments = false # Disables wrapping for comments.
ij_java_wrap_first_method_in_call_chain = false # Does not enforce wrapping at the first method call in a chain.
ij_java_wrap_long_lines = false # Disables automatic wrapping of long lines.

[.editorconfig]
ij_editorconfig_align_group_field_declarations = false # Disables alignment of grouped field declarations in
# .editorconfig files.
ij_editorconfig_space_after_colon = false # Prevents adding a space after colons (:) in .editorconfig files.
ij_editorconfig_space_after_comma = true # Ensures a space is added after commas (,) in .editorconfig files.
ij_editorconfig_space_before_colon = false # Prevents adding a space before colons (:) in .editorconfig files.
ij_editorconfig_space_before_comma = false # Prevents adding a space before commas (,) in .editorconfig files.
ij_editorconfig_spaces_around_assignment_operators = true # Ensures spaces are added around assignment operators
# (e.g., =).

[*.md]
ij_markdown_force_one_space_after_blockquote_symbol = true # Ensures one space is added after the '>' blockquote
# symbol in Markdown files.
ij_markdown_force_one_space_after_header_symbol = true # Ensures one space is added after header symbols (e.g., #, ##)
# in Markdown files.
ij_markdown_force_one_space_after_list_bullet = true # Ensures one space is added after list bullets (e.g., '-', '*')
# in Markdown files.
ij_markdown_force_one_space_between_words = true # Ensures only one space exists between words in Markdown files.
ij_markdown_keep_indents_on_empty_lines = false # Prevents keeping indentation on empty lines in Markdown files.
ij_markdown_max_lines_around_block_elements = 1 # Limits the maximum number of blank lines around block elements to 1.
ij_markdown_max_lines_around_header = 1 # Limits the maximum number of blank lines around headers to 1.
ij_markdown_max_lines_between_paragraphs = 1 # Limits the maximum number of blank lines between paragraphs to 1.
ij_markdown_min_lines_around_block_elements = 1 # Ensures at least 1 blank line around block elements.
ij_markdown_min_lines_around_header = 1 # Ensures at least 1 blank line around headers.
ij_markdown_min_lines_between_paragraphs = 1 # Ensures at least 1 blank line between paragraphs.

[{*.properties,spring.handlers,spring.schemas}]
ij_properties_align_group_field_declarations = false # Disables alignment of grouped field declarations in
# properties files.
ij_properties_keep_blank_lines = false # Removes blank lines from properties files.
ij_properties_key_value_delimiter = equals # Specifies '=' as the delimiter between keys and values in properties files.
ij_properties_spaces_around_key_value_delimiter = false # Prevents spaces around the key-value delimiter
# (e.g., "key=value").

[{*.yaml,*.yml}]
indent_size = 2 # Sets the indentation size to 2 spaces for YAML files.
ij_yaml_align_values_properties = do_not_align # Disables the alignment of property values in YAML files.
ij_yaml_autoinsert_sequence_marker = true # Automatically adds sequence markers (e.g., '-') where needed in YAML files.
ij_yaml_block_mapping_on_new_line = false # Prevents block mappings from starting on a new line.
ij_yaml_indent_sequence_value = true # Ensures sequence values are indented in YAML files.
ij_yaml_keep_indents_on_empty_lines = false # Prevents retaining indentation on empty lines.
ij_yaml_keep_line_breaks = true # Preserves line breaks in YAML files.
ij_yaml_sequence_on_new_line = false # Prevents sequence items from being placed on a new line.
ij_yaml_space_before_colon = false # Prevents adding space before colons in YAML files.
ij_yaml_spaces_within_braces = true # Ensures spaces are added within braces `{}` in YAML files.
ij_yaml_spaces_within_brackets = true # Ensures spaces are added within brackets `[]` in YAML files.
