package org.twins.core.featurer.fieldtyper.storage;

import org.cambium.common.kit.Kit;
import org.twins.core.dao.twin.TwinEntity;

import java.util.Objects;
import java.util.Properties;
import java.util.UUID;

public record FieldStorageConfig(TwinFieldStorage twinFieldStorage, Properties properties) {
    /**
     * this method is not autogenerated
     * it's used to fill TwinClassEntity.fieldStorageConfigSet
     */
    @Override
    public int hashCode() {
        return Objects.hash(twinFieldStorage.getClass(), properties);
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        FieldStorageConfig config = (FieldStorageConfig) o;
        return Objects.equals(twinFieldStorage.getClass(), config.twinFieldStorage.getClass()) &&
                Objects.equals(properties, config.properties);
    }


    public void load(Kit<TwinEntity, UUID> twinsKit) {
        twinFieldStorage.load(twinsKit, properties);
    }

    public boolean hasStrictValues(UUID twinClassFieldId) {
        return twinFieldStorage.hasStrictValues(twinClassFieldId);
    }

    public boolean isLoaded(TwinEntity twinEntity) {
        return twinFieldStorage.isLoaded(twinEntity);
    }

    public void initEmpty(TwinEntity twinEntity) {
        twinFieldStorage.initEmpty(twinEntity);
    }
}
