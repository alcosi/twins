plugins {
    id "net.nemerosa.versioning" version "3.1.0"
}


wrapper {
    gradleVersion = '8.2'
}


allprojects {
    group = 'org.twins'
}

ext {
    profile = (project.hasProperty('profile') ? project.profile : 'stage').toLowerCase()
}

subprojects {
    apply plugin: 'java'

    repositories {
        mavenLocal()
        mavenCentral()
    }

    sourceCompatibility = "1.17"

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }

    tasks.withType(Jar) {
        manifest {
            attributes(
                    'Built-By'       : System.properties['user.name'],
                    'Build-Timestamp': new java.text.SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSZ").format(new Date()),
                    'Build-Revision' : versioning.info.commit,
                    'Created-By'     : "Gradle ${gradle.gradleVersion}",
                    'Build-Jdk'      : "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})",
                    'Build-OS'       : "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}"
            )
        }

    }

    processResources {
        /**
         * application.properties
         **/
        exclude "application.properties"
        println "Using profile [${profile}]"
        rename "application-${profile}.properties" , 'application.properties'
        doLast {
            delete fileTree(project.buildDir).matching {
                include "**/application-*.properties"
            }
            if (!profile.equalsIgnoreCase('release')){
                delete fileTree(project.buildDir).matching {
                    include "**/custom-release.properties"
                }
            }
        }
    }

    task cleanResources {
        doLast {
            delete fileTree(project.buildDir).matching {
                include "**/application.properties"
            }
        }
    }
}
